basePath: /
definitions:
  fiber.Map:
    additionalProperties: true
    type: object
  noto_internal_services_books_model.ArchiveBook:
    properties:
      is_archived:
        type: boolean
    type: object
  noto_internal_services_books_model.BookCreate:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_books_model.BookCreateSwagger:
    properties:
      title:
        type: string
    type: object
  noto_internal_services_books_model.BookResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_labels_model.AddBookLabelResponse:
    properties:
      book_id:
        type: string
      id:
        type: string
      label_id:
        type: string
    type: object
  noto_internal_services_labels_model.BookLabelSwagger:
    properties:
      label_name:
        type: string
    type: object
  noto_internal_services_labels_model.LabelCreate:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_labels_model.LabelCreateSwagger:
    properties:
      name:
        type: string
    type: object
  noto_internal_services_labels_model.LabelResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_notes_model.NoteCreate:
    properties:
      book_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_notes_model.NoteCreateSwagger:
    properties:
      text:
        type: string
    type: object
  noto_internal_services_notes_model.NoteResponse:
    properties:
      book_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  noto_internal_services_notes_model.NoteUpdate:
    properties:
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Noto API
  title: NOTO API
  version: "1.0"
paths:
  /books:
    get:
      description: Get all book
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/noto_internal_services_books_model.BookResponse'
            type: array
      summary: Get all book
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Book to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_books_model.BookCreateSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/noto_internal_services_books_model.BookCreate'
      summary: Create a new book
      tags:
      - Books
  /books/{bookId}/labels:
    delete:
      consumes:
      - application/json
      description: Delete label from book
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      - description: Label to delete
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_labels_model.BookLabelSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Delete label from book
      tags:
      - Labels
    post:
      consumes:
      - application/json
      description: Add label to book
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      - description: Label to add
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_labels_model.BookLabelSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/noto_internal_services_labels_model.AddBookLabelResponse'
      summary: Add label to book
      tags:
      - Labels
  /books/{bookId}/notes:
    get:
      description: Get notes by book id
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/noto_internal_services_notes_model.NoteResponse'
            type: array
      summary: Get notes by book id
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create a new note
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      - description: Note to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_notes_model.NoteCreateSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/noto_internal_services_notes_model.NoteCreate'
      summary: Create a new note
      tags:
      - Notes
  /books/{bookId}/notes/{noteId}:
    delete:
      consumes:
      - application/json
      description: Deelete note
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      - description: Note ID
        in: path
        name: noteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: object
      summary: Delete note
      tags:
      - Notes
    patch:
      consumes:
      - application/json
      description: Update note
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      - description: Note ID
        in: path
        name: noteId
        required: true
        type: string
      - description: Note to update
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_notes_model.NoteUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/noto_internal_services_notes_model.NoteResponse'
      summary: Update note
      tags:
      - Notes
  /books/{id}:
    get:
      description: Get book by id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/noto_internal_services_books_model.BookResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get book by id
      tags:
      - Books
    patch:
      consumes:
      - application/json
      description: Archive book by id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book to archive
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_books_model.ArchiveBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/noto_internal_services_books_model.BookResponse'
      summary: Archive book by id
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update book by id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book to update
        in: body
        name: book
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/noto_internal_services_books_model.BookResponse'
      summary: Update book by id
      tags:
      - Books
  /labels:
    get:
      description: Get all labels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/noto_internal_services_labels_model.LabelResponse'
            type: array
      summary: Get all labels
      tags:
      - Labels
    post:
      consumes:
      - application/json
      description: Create a new label
      parameters:
      - description: Label to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/noto_internal_services_labels_model.LabelCreateSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/noto_internal_services_labels_model.LabelCreate'
      summary: Create a new label
      tags:
      - Labels
  /labels/{labelId}:
    delete:
      consumes:
      - application/json
      description: Delete label
      parameters:
      - description: Label ID
        in: path
        name: labelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Delete label
      tags:
      - Labels
swagger: "2.0"
